[tool.poetry]
name = "bpt"
version = "0.0.0"
description = ""
authors = ["vector-of-bool <vectorofbool@gmail.com>"]
license = "MPL-2.0"
packages = [
    { include = "bpt_ci", from = "tools/" },
]

[tool.poetry.dependencies]
python = "^3.7"

semver = "^2.13.0"
pytest = "^7.0.1"
pytest-xdist = "^2.1.0"
pytest-asyncio = "^0.14.0"
typing-extensions = "^4.0.1"
json5 = "^0.9.5"
distro = "^1.5.0"
dagon = "^0.9.3"
importlib-metadata = "^4.10.0"
yapf = "^0.32.0"
pylint = "^2.12.2"
Sphinx = "^4.4.0"
pyright = "^1.1.227"
sphinx-hoverxref = "^1.0.1"
rstcheck = "^3.3.1"
doc8 = "^0.10.1"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
# Only needed for development
rope = "^0.18.0"
sphinx-autobuild = "^2021.3.14"

[tool.poetry.scripts]
gen-msvs-vsc-task = "bpt_ci.msvs:generate_vsc_task"
bpt-audit-docrefs = "bpt_ci.docs:audit_docrefs_main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pyright]
include = ["tools/**"]
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportMissingTypeStubs = false
reportMissingImports = true

[tool.doc8]
max_line_length = 81

[tool.pytest.ini_options]
junit_log_passing_tests = true
junit_logging = "all"
testpaths = [
    "tests/"
]

[tool.yapf]
based_on_style = "pep8"
column_limit = 120

[tool.pylint.MASTER]
jobs = 10
persistent = true
disable = [
    "C",
    "too-few-public-methods",
    "redefined-outer-name",
]

[tool.pylint.REPORTS]
reports = false
score = true
output-format = "colorized"
